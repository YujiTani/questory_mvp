name: Deploy

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  BACKEND_REPOSITORY: ${{ vars.BACKEND_REPOSITORY }}
  FRONTEND_REPOSITORY: ${{ vars.FRONTEND_REPOSITORY }}
  NGINX_REPOSITORY: ${{ vars.NGINX_REPOSITORY }}
  DB_NAME: ${{ secrets.POSTGRES_DB }}
  DB_USER: ${{ secrets.POSTGRES_USER }}
  DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
  BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  VERSION: ${{ github.event.release.tag_name }}
  CLOUDFLARE_SSL_KEY: ${{ secrets.CLOUDFLARE_SSL_KEY }}
  CLOUDFLARE_SSL_PEM: ${{ secrets.CLOUDFLARE_SSL_PEM }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy SSL certificates
        run: |
          echo "$CLOUDFLARE_SSL_KEY" > nginx/ssl/questory.com.key
          echo "$CLOUDFLARE_SSL_PEM" > nginx/ssl/questory.com.pem

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker compose -f compose-prod.yml build
          docker compose -f compose-prod.yml push

      - name: Deploy to Sakura VPS
        uses: appleboy/ssh-action@v1.0.3
        env:
          BACKEND_REPOSITORY: ${{ vars.BACKEND_REPOSITORY }}
          FRONTEND_REPOSITORY: ${{ vars.FRONTEND_REPOSITORY }}
          NGINX_REPOSITORY: ${{ vars.NGINX_REPOSITORY }}
          DOCKERHUB_USERNAME: ${{ env.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ env.DOCKERHUB_PASSWORD }}
          VERSION: ${{ env.VERSION }}
        with:
          host: ${{ secrets.SAKURA_SSH_HOST }}
          username: ${{ secrets.SAKURA_SSH_USERNAME }}
          key: ${{ secrets.SAKURA_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SAKURA_SSH_PORT }}
          envs: DOCKERHUB_USERNAME, DOCKERHUB_PASSWORD, VERSION, BACKEND_REPOSITORY, FRONTEND_REPOSITORY, NGINX_REPOSITORY
          script_stop: true
          script: |
            cd code/questory_mvp
            git pull origin main
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker compose -f compose-prod.yml down
            docker compose -f compose-prod.yml pull
            docker compose -f compose-prod.yml up -d
