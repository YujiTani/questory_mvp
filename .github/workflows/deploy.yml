name: Deploy

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      BACKEND_REPOSITORY: ${{ vars.BACKEND_REPOSITORY }}
      FRONTEND_REPOSITORY: ${{ vars.FRONTEND_REPOSITORY }}
      NGINX_REPOSITORY: ${{ vars.NGINX_REPOSITORY }}
      DB_NAME: ${{ secrets.POSTGRES_DB }}
      DB_USER: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
      BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 引数で受け取ったバージョンを環境変数に設定
      - name: Set version
        run: |
          VERSION=${{ github.event.release.tag_name }}
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Build Docker image
        run: |
          docker compose -f compose-prod.yml build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        run: |
          docker compose -f compose-prod.yml push

      - name: Deploy to Sakura VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SAKURA_SSH_HOST }}
          username: ${{ secrets.SAKURA_SSH_USERNAME }}
          key: ${{ secrets.SAKURA_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SAKURA_SSH_PORT }}
          script: |
            # エラーが発生した場合は処理を中断
            set -e
            # デバッグ用にコマンドを表示
            set -x
            cd code/questory_mvp
            docker compose -f compose-prod.yml down
            docker compose -f compose-prod.yml pull
            docker compose -f compose-prod.yml up -d
